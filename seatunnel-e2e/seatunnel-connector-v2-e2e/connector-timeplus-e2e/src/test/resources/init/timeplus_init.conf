#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

source_table = """
create stream if not exists `default`.source_table(
    `id`                int64,
    `c_map`             map(string, int32),
    `c_array_string`    array(string),
    `c_array_short`     array(int16),
    `c_array_int`       array(int32),
    `c_array_long`      array(int64),
    `c_array_float`     array(float32),
    `c_array_double`    array(float64),
    `c_string`          string,
    `c_boolean`         boolean,
    `c_int8`            int8,
    `c_int16`           int16,
    `c_int32`           int32,
    `c_int64`           int64,
    `c_float32`         float32,
    `c_float64`         float64,
    `c_decimal`         decimal(9,4),
    `c_date`            date,
    `c_datetime`        datetime64,
    `c_nullable`        nullable(int32),
    `c_lowcardinality`  low_cardinality(string),
    `c_nested`          nested
        (
            `int` uint32,
            `double` float64,
            `string` string
        ),
    `c_int128`          int128,
    `c_uint128`         uint128,
    `c_int256`          int256,
    `c_uint256`         uint256
)
"""

sink_table = """
create stream if not exists `default`.sink_table(
    `id`                int64,
    `c_map`             map(string, int32),
    `c_array_string`    array(string),
    `c_array_short`     array(int16),
    `c_array_int`       array(int32),
    `c_array_long`      array(int64),
    `c_array_float`     array(float32),
    `c_array_double`    array(float64),
    `c_string`          string,
    `c_boolean`         boolean,
    `c_int8`            int8,
    `c_int16`           int16,
    `c_int32`           int32,
    `c_int64`           int64,
    `c_float32`         float32,
    `c_float64`         float64,
    `c_decimal`         decimal(9,4),
    `c_date`            date,
    `c_datetime`        datetime64,
    `c_nullable`        nullable(int32),
    `c_lowcardinality`  low_cardinality(string),
    `c_nested`          nested
        (
            `int` uint32,
            `double` float64,
            `string` string
        ),
    `c_int128`          int128,
    `c_uint128`         uint128,
    `c_int256`          int256,
    `c_uint256`         uint256
)
"""

insert_sql = """
insert into `default`.source_table
(
    `id`,
    `c_map`,
    `c_array_string`,
    `c_array_short`,
    `c_array_int`,
    `c_array_long`,
    `c_array_float`,
    `c_array_double`,
    `c_string`,
    `c_boolean`,
    `c_int8`,
    `c_int16`,
    `c_int32`,
    `c_int64`,
    `c_float32`,
    `c_float64`,
    `c_decimal`,
    `c_date`,
    `c_datetime`,
    `c_nullable`,
    `c_lowcardinality`,
    `c_nested.int`,
    `c_nested.double`,
    `c_nested.string`,
    `c_int128`,
    `c_uint128`,
    `c_int256`,
    `c_uint256`
)
values
(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
"""

compare_sql = """
select
    %s
 from (
    select * from table(source_table)
union all
    select * from table(sink_table)
    )
group by %s
having count(*) < 2
"""