#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

env {
  parallelism = 1
  job.mode = "STREAMING"
  checkpoint.interval = 5000
}

source {
  Http {
    result_table_name = "fake"
    url = "http://mockserver:1080/example/http"
    method = "GET"
    format = "json"
    date_format="yyyy-MM-dd"
    datetime_format="yyyy-MM-dd'T'HH:mm:ss"
    time_format="HH:mm:ss"
    poll_interval_millis = 5000
    schema = {
      fields {
        c_string = string
        c_int = int
      }
    }
  }
}

transform {
  Sql {
    source_table_name = "fake"
    result_table_name = "fake1"
    query = "select  CONCAT(c_string, CAST(RAND() AS STRING)) as c_string, c_int from fake"
  }
}

sink {
  Jdbc {
    source_table_name = "fake1"
    driver = org.postgresql.Driver
    url = "jdbc:postgresql://postgresql:5432/test?loggerLevel=OFF"
    user = test
    password = test
    generate_sink_sql = true
    database = test
    table = "public.sink"
    primary_keys = ["c_string"]
    support_upsert_by_query_primary_key_exist = true
    batch_size = 1
  }
}
